import json
import os
import time
import threading
from flask import Flask
import requests
from telegram import Bot

# Telegram
TELEGRAM_TOKEN = os.getenv("BOT_TOKEN")
CHAT_IDS = os.getenv("CHAT_IDS", "").split(",")  # —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
bot = Bot(token=TELEGRAM_TOKEN)

# –°—Ç–∞—Ç—å–∏
SENT_FILE = "sent_articles.json"
API_URL = "https://moskvichka.ru/api/articles?page=1&limit=10"

def load_sent_articles():
    if os.path.exists(SENT_FILE):
        with open(SENT_FILE, "r") as f:
            return set(json.load(f))
    return set()

def save_sent_articles(sent_ids):
    with open(SENT_FILE, "w") as f:
        json.dump(list(sent_ids), f)

def fetch_articles(page=1, limit=10):
    try:
        headers = {
            "User-Agent": "Mozilla/5.0 (compatible; TelegramBot/1.0)",
            "Accept": "application/json"
        }
        response = requests.get(API_URL, params={"page": page, "limit": limit}, headers=headers)
        print(f"üîÑ –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print("üì¶ Raw response text:")
        print(response.text[:1000])  # –æ–≥—Ä–∞–Ω–∏—á–∏–º –≤—ã–≤–æ–¥ –¥–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤

        response.raise_for_status()
        data = response.json()

        if "items" in data:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {len(data['items'])}")
        else:
            print("‚ö†Ô∏è –í –æ—Ç–≤–µ—Ç–µ –Ω–µ—Ç –∫–ª—é—á–∞ 'items'")

        return data.get("items", [])

    except requests.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {e}")
    except ValueError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ JSON: {e}")
    except Exception as e:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

    return []

def format_article(article):
    title = article.get("title", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
    slug = article.get("slug", "")
    date = article.get("published_at", "")[:10]
    excerpt = article.get("excerpt", "")
    url = f"https://moskvichka.ru/articles/{slug}"
    return f"üì∞ <b>{title}</b>\nüìÖ {date}\n\n{excerpt}\n\nüîó {url}"

def check_new_articles():
    sent_ids = load_sent_articles()

    while True:
        print("\nüîé –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞ –Ω–∞ –Ω–æ–≤—ã–µ —Å—Ç–∞—Ç—å–∏...\n")
        articles = fetch_articles()
        new_articles = []

        for art in articles:
            art_id = art.get("id")
            if art_id and art_id not in sent_ids:
                new_articles.append(art)
                sent_ids.add(art_id)

        for article in reversed(new_articles):  # –æ—Ç —Å—Ç–∞—Ä–æ–π –∫ –Ω–æ–≤–æ–π
            msg = format_article(article)
            for chat_id in CHAT_IDS:
                bot.send_message(chat_id=chat_id, text=msg, parse_mode="HTML")

        print(f"‚úÖ –ù–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {len(new_articles)}")
        save_sent_articles(sent_ids)

        time.sleep(60)  # –∫–∞–∂–¥—ã–µ 1 –º–∏–Ω—É—Ç—É

# Flask
app = Flask(__name__)

@app.route("/")
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

if __name__ == "__main__":
    threading.Thread(target=check_new_articles, daemon=True).start()
    app.run(host="0.0.0.0", port=8080)
